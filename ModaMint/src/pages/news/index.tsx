import { useState } from 'react';
import './style.css';

interface NewsArticle {
    id: number;
    title: string;
    summary: string;
    content: string;
    author: string;
    publishDate: string;
    category: string;
    tags: string[];
    image: string;
    readTime: number;
    views: number;
}

const mockNews: NewsArticle[] = [
    {
        id: 1,
        title: "Xu h∆∞·ªõng th·ªùi trang Thu ƒê√¥ng 2025: Phong c√°ch t·ªëi gi·∫£n hi·ªán ƒë·∫°i",
        summary: "Kh√°m ph√° nh·ªØng xu h∆∞·ªõng th·ªùi trang n·ªïi b·∫≠t nh·∫•t c·ªßa m√πa Thu ƒê√¥ng 2025 v·ªõi phong c√°ch t·ªëi gi·∫£n nh∆∞ng kh√¥ng k√©m ph·∫ßn sang tr·ªçng.",
        content: "M√πa Thu ƒê√¥ng 2025 ƒë√°nh d·∫•u s·ª± tr·ªü l·∫°i m·∫°nh m·∫Ω c·ªßa phong c√°ch t·ªëi gi·∫£n v·ªõi nh·ªØng thi·∫øt k·∫ø tinh t·∫ø, m√†u s·∫Øc trung t√≠nh v√† ch·∫•t li·ªáu cao c·∫•p...",
        author: "Nguy·ªÖn Th·ªã Lan",
        publishDate: "2025-10-01",
        category: "Xu h∆∞·ªõng",
        tags: ["th·ªùi trang", "xu h∆∞·ªõng", "thu ƒë√¥ng"],
        image: "https://images.unsplash.com/photo-1445205170230-053b83016050?w=400&h=250&fit=crop",
        readTime: 5,
        views: 1250
    },
    {
        id: 2,
        title: "C√°ch ph·ªëi ƒë·ªì c√¥ng s·ªü thanh l·ªãch cho ph√°i n·ªØ hi·ªán ƒë·∫°i",
        summary: "H∆∞·ªõng d·∫´n chi ti·∫øt c√°ch t·∫°o ra nh·ªØng set ƒë·ªì c√¥ng s·ªü v·ª´a chuy√™n nghi·ªáp v·ª´a th·ªÉ hi·ªán phong c√°ch c√° nh√¢n.",
        content: "Th·ªùi trang c√¥ng s·ªü kh√¥ng c√≤n ƒë∆°n thu·∫ßn l√† vest v√† √°o s∆° mi. Ng√†y nay, ph√°i n·ªØ c√≥ th·ªÉ t·ª± tin th·ªÉ hi·ªán c√° t√≠nh qua c√°ch ph·ªëi ƒë·ªì...",
        author: "Tr·∫ßn Minh H·∫°nh",
        publishDate: "2025-09-28",
        category: "Ph·ªëi ƒë·ªì",
        tags: ["c√¥ng s·ªü", "ph·ªëi ƒë·ªì", "n·ªØ"],
        image: "https://images.unsplash.com/photo-1515470874091-c85a0ebe5b36?w=400&h=250&fit=crop",
        readTime: 7,
        views: 890
    },
    {
        id: 3,
        title: "ModaMint ra m·∫Øt b·ªô s∆∞u t·∫≠p 'Urban Minimalist' ƒë·ªôc quy·ªÅn",
        summary: "B·ªô s∆∞u t·∫≠p m·ªõi nh·∫•t c·ªßa ModaMint l·∫•y c·∫£m h·ª©ng t·ª´ cu·ªôc s·ªëng ƒë√¥ th·ªã hi·ªán ƒë·∫°i v·ªõi nh·ªØng thi·∫øt k·∫ø tinh gi·∫£n nh∆∞ng ƒë·∫ßy c√° t√≠nh.",
        content: "Sau th√†nh c√¥ng c·ªßa c√°c b·ªô s∆∞u t·∫≠p tr∆∞·ªõc, ModaMint ti·∫øp t·ª•c cho ra m·∫Øt 'Urban Minimalist' - m·ªôt b·ªô s∆∞u t·∫≠p ho√†n to√†n m·ªõi...",
        author: "L√™ VƒÉn Minh",
        publishDate: "2025-09-25",
        category: "S·∫£n ph·∫©m",
        tags: ["modamint", "b·ªô s∆∞u t·∫≠p", "urban"],
        image: "https://images.unsplash.com/photo-1469334031218-e382a71b716b?w=400&h=250&fit=crop",
        readTime: 4,
        views: 2100
    },
    {
        id: 4,
        title: "5 tips ch·ªçn gi√†y ph√π h·ª£p v·ªõi trang ph·ª•c m√πa ƒë√¥ng",
        summary: "Nh·ªØng l·ªùi khuy√™n h·ªØu √≠ch ƒë·ªÉ b·∫°n ch·ªçn ƒë∆∞·ª£c ƒë√¥i gi√†y ho√†n h·∫£o cho outfit m√πa ƒë√¥ng c·ªßa m√¨nh.",
        content: "Gi√†y d√©p ƒë√≥ng vai tr√≤ quan tr·ªçng trong vi·ªác ho√†n thi·ªán t·ªïng th·ªÉ trang ph·ª•c. ƒê·∫∑c bi·ªát trong m√πa ƒë√¥ng...",
        author: "Ph·∫°m Th·ªã Mai",
        publishDate: "2025-09-22",
        category: "H∆∞·ªõng d·∫´n",
        tags: ["gi√†y", "m√πa ƒë√¥ng", "tips"],
        image: "https://images.unsplash.com/photo-1549298916-b41d501d3772?w=400&h=250&fit=crop",
        readTime: 6,
        views: 1450
    },
    {
        id: 5,
        title: "M√†u s·∫Øc th·ªëng tr·ªã th·∫ø gi·ªõi th·ªùi trang 2025",
        summary: "T√¨m hi·ªÉu v·ªÅ nh·ªØng gam m√†u ƒë∆∞·ª£c d·ª± ƒëo√°n s·∫Ω l√†m m∆∞a l√†m gi√≥ trong ng√†nh th·ªùi trang nƒÉm 2025.",
        content: "Pantone ƒë√£ c√¥ng b·ªë nh·ªØng m√†u s·∫Øc hot trend cho nƒÉm 2025. H√£y c√πng kh√°m ph√° v√† ·ª©ng d·ª•ng v√†o t·ªß ƒë·ªì c·ªßa b·∫°n...",
        author: "Ho√†ng Anh Tu·∫•n",
        publishDate: "2025-09-20",
        category: "Xu h∆∞·ªõng",
        tags: ["m√†u s·∫Øc", "2025", "pantone"],
        image: "https://images.unsplash.com/photo-1441986300917-64674bd600d8?w=400&h=250&fit=crop",
        readTime: 8,
        views: 980
    },
    {
        id: 6,
        title: "Sustainable Fashion: T∆∞∆°ng lai c·ªßa ng√†nh th·ªùi trang",
        summary: "Th·ªùi trang b·ªÅn v·ªØng kh√¥ng ch·ªâ l√† xu h∆∞·ªõng m√† ƒë√£ tr·ªü th√†nh tr√°ch nhi·ªám c·ªßa m·ªói th∆∞∆°ng hi·ªáu v√† ng∆∞·ªùi ti√™u d√πng.",
        content: "Trong b·ªëi c·∫£nh bi·∫øn ƒë·ªïi kh√≠ h·∫≠u ng√†y c√†ng nghi√™m tr·ªçng, ng√†nh th·ªùi trang ƒëang chuy·ªÉn h∆∞·ªõng m·∫°nh m·∫Ω...",
        author: "ƒê·ªó Th·ªã H∆∞∆°ng",
        publishDate: "2025-09-18",
        category: "B·ªÅn v·ªØng",
        tags: ["sustainable", "m√¥i tr∆∞·ªùng", "t∆∞∆°ng lai"],
        image: "https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=400&h=250&fit=crop",
        readTime: 10,
        views: 750
    }
];

const categories = ["T·∫•t c·∫£", "Xu h∆∞·ªõng", "Ph·ªëi ƒë·ªì", "S·∫£n ph·∫©m", "H∆∞·ªõng d·∫´n", "B·ªÅn v·ªØng"];

export default function NewsPage() {
    const [articles] = useState<NewsArticle[]>(mockNews);
    const [searchTerm, setSearchTerm] = useState('');
    const [selectedCategory, setSelectedCategory] = useState('T·∫•t c·∫£');
    const [currentPage, setCurrentPage] = useState(1);
    const articlesPerPage = 6;

    // Filter articles based on search and category
    const filteredArticles = articles.filter(article => {
        const matchesSearch = article.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
            article.summary.toLowerCase().includes(searchTerm.toLowerCase()) ||
            article.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));

        const matchesCategory = selectedCategory === 'T·∫•t c·∫£' || article.category === selectedCategory;

        return matchesSearch && matchesCategory;
    });

    // Pagination
    const totalPages = Math.ceil(filteredArticles.length / articlesPerPage);
    const startIndex = (currentPage - 1) * articlesPerPage;
    const currentArticles = filteredArticles.slice(startIndex, startIndex + articlesPerPage);

    const formatDate = (dateString: string) => {
        const date = new Date(dateString);
        return date.toLocaleDateString('vi-VN', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
    };

    const handleCategoryChange = (category: string) => {
        setSelectedCategory(category);
        setCurrentPage(1);
    };

    const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        setSearchTerm(e.target.value);
        setCurrentPage(1);
    };

    return (
        <div className="news-page">
            <div className="news-header">
                <h1>Tin T·ª©c Th·ªùi Trang</h1>
                <p>C·∫≠p nh·∫≠t nh·ªØng xu h∆∞·ªõng v√† th√¥ng tin m·ªõi nh·∫•t t·ª´ th·∫ø gi·ªõi th·ªùi trang</p>
            </div>

            {/* Featured Article */}
            {filteredArticles.length > 0 && (
                <div className="featured-article">
                    <div className="featured-content">
                        <div className="featured-image">
                            <img src={filteredArticles[0].image} alt={filteredArticles[0].title} />
                            <div className="featured-badge">N·ªïi b·∫≠t</div>
                        </div>
                        <div className="featured-info">
                            <div className="article-meta">
                                <span className="category">{filteredArticles[0].category}</span>
                                <span className="date">{formatDate(filteredArticles[0].publishDate)}</span>
                                <span className="read-time">{filteredArticles[0].readTime} ph√∫t ƒë·ªçc</span>
                            </div>
                            <h2>{filteredArticles[0].title}</h2>
                            <p>{filteredArticles[0].summary}</p>
                            <div className="article-footer">
                                <div className="author-info">
                                    <span className="author">üë§ {filteredArticles[0].author}</span>
                                    <span className="views">üëÅÔ∏è {filteredArticles[0].views.toLocaleString()} l∆∞·ª£t xem</span>
                                </div>
                                <button className="read-more-btn">ƒê·ªçc ti·∫øp</button>
                            </div>
                        </div>
                    </div>
                </div>
            )}

            {/* Search and Filter */}
            <div className="news-controls">
                <div className="search-section">
                    <div className="search-box">
                        <input
                            type="text"
                            placeholder="T√¨m ki·∫øm b√†i vi·∫øt..."
                            value={searchTerm}
                            onChange={handleSearchChange}
                            className="search-input"
                        />
                        <button className="search-btn">üîç</button>
                    </div>
                </div>

                <div className="category-filter">
                    {categories.map(category => (
                        <button
                            key={category}
                            className={`category-btn ${selectedCategory === category ? 'active' : ''}`}
                            onClick={() => handleCategoryChange(category)}
                        >
                            {category}
                        </button>
                    ))}
                </div>
            </div>

            {/* Articles Grid */}
            <div className="articles-grid">
                {currentArticles.length === 0 ? (
                    <div className="no-articles">
                        <div className="no-articles-icon">üì∞</div>
                        <h3>Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt n√†o</h3>
                        <p>Th·ª≠ thay ƒë·ªïi t·ª´ kh√≥a t√¨m ki·∫øm ho·∫∑c ch·ªçn danh m·ª•c kh√°c</p>
                    </div>
                ) : (
                    currentArticles.slice(1).map(article => (
                        <article key={article.id} className="article-card">
                            <div className="article-image">
                                <img src={article.image} alt={article.title} />
                                <div className="article-overlay">
                                    <button className="quick-read">ƒê·ªçc nhanh</button>
                                </div>
                            </div>

                            <div className="article-content">
                                <div className="article-meta">
                                    <span className="category">{article.category}</span>
                                    <span className="date">{formatDate(article.publishDate)}</span>
                                </div>

                                <h3 className="article-title">{article.title}</h3>
                                <p className="article-summary">{article.summary}</p>

                                <div className="article-tags">
                                    {article.tags.map(tag => (
                                        <span key={tag} className="tag">#{tag}</span>
                                    ))}
                                </div>

                                <div className="article-footer">
                                    <div className="article-stats">
                                        <span className="read-time">‚è±Ô∏è {article.readTime} ph√∫t</span>
                                        <span className="views">üëÅÔ∏è {article.views.toLocaleString()}</span>
                                    </div>
                                    <div className="author">üë§ {article.author}</div>
                                </div>
                            </div>
                        </article>
                    ))
                )}
            </div>

            {/* Pagination */}
            {totalPages > 1 && (
                <div className="pagination">
                    <button
                        className="page-btn"
                        onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}
                        disabled={currentPage === 1}
                    >
                        ‚Üê Tr∆∞·ªõc
                    </button>

                    <div className="page-numbers">
                        {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (
                            <button
                                key={page}
                                className={`page-number ${currentPage === page ? 'active' : ''}`}
                                onClick={() => setCurrentPage(page)}
                            >
                                {page}
                            </button>
                        ))}
                    </div>

                    <button
                        className="page-btn"
                        onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}
                        disabled={currentPage === totalPages}
                    >
                        Sau ‚Üí
                    </button>
                </div>
            )}

            {/* Newsletter Signup */}
            <div className="newsletter-section">
                <div className="newsletter-content">
                    <h2>ƒêƒÉng k√Ω nh·∫≠n tin t·ª©c m·ªõi nh·∫•t</h2>
                    <p>Nh·∫≠n th√¥ng b√°o v·ªÅ nh·ªØng b√†i vi·∫øt v√† xu h∆∞·ªõng th·ªùi trang m·ªõi nh·∫•t</p>
                    <div className="newsletter-form">
                        <input
                            type="email"
                            placeholder="Nh·∫≠p email c·ªßa b·∫°n"
                            className="newsletter-input"
                        />
                        <button className="newsletter-btn">ƒêƒÉng k√Ω</button>
                    </div>
                </div>
            </div>
        </div>
    );
}
